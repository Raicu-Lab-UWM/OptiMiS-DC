%

%------------------------------------------------------------------------

% Copyright (C) 2018  Raicu Lab.
%
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU Affero General Public License as
%     published by the Free Software Foundation, either version 3 of the
%     License, or (at your option) any later version.
% 
%     This program is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU Affero General Public License for more details.
% 
%     You should have received a copy of the GNU Affero General Public License
%     along with this program.  If not, see <https://www.gnu.org/licenses/>.
%------------------------------------------------------------------------------
% Writen By: Gabriel Biener, PhD 
% Advisor and Group Leader: Prof. Valerica Raicu
% For technical questions contact biener@uwm.edu
%------------------------------------------------------------------------------
classdef Field_ofView_O
    properties
        iName;                   % Image Name for indexing purposes
        Path             = [];   % The path of the scene acquired by OptiMiS, can direct to a single frame, a time series or a z-stack
        Name             = {};   % Name/Names of the images files for a single frame, a time series or a z-stack
        z_Position       = [];   % in case of a Z - Stack acquizition the z positions of the frame are recorded
        exWavelength     = [];   % In case of an excitation spectrum measurements or a dual excitation measurement, the excitation wavelengths are recorded
        FOV_Type         = [];   % Scene type. Options are: Single Image, Excitation Spectrum, Z - Stack, Time Series, Dual Excitation.
        Wavelength_Range;        % wavelength list as generated by the calibration proccess. Read from the Wavelength_Channel calibration.txt file
        raw_Data;                % Current Image Stack including the all the images for all the acquired wavelengths.
        FOV_Dimensions;          % x, y, z dimensions of the image stack
    end

    methods
        % Add information about the image loaded including aquizition paramters
        Obj = Register_Scene(Obj, Path, Name, nFrame, Spectrum, UnMix_Method, varargin)
        Self = Add_FOV_toList(Self, Image_, FOV_inStruct)
        Self = loadFOV_List(Self, Path, Name, Image_, Remove_HotPixels)
    end

    methods (Static)
        % Load wavelength to channel calibration from the relevant text file
        Wavelength_Range      = Load_Wavelength(Path, Name)
    end
end